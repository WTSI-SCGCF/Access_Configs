RunDef XML file notes
=====================

Monitoring a RunDef in progress
-------------------------------
Once a RunDef is dropped to the inbox (C:/Labcyte/Tempo/Logs/Scheduler/inbox) and started you can monitor it in progress:

* The RunDef file is moved into the outbox (C:/Labcyte/Tempo/Logs/Scheduler/outbox)
* Retrieve the run id(s) from the outbox/rundef file (<RunSet ..><Run RunID="123" ...>)
* For each run id you can locate the run directory within the tempo logs directory
* Within the run directory there is a 'Run_ID.run' status file e.g. 123.run
* When run status = 'Complete' then the run has finished successfully and you can pull information from the run folder and update the LIMS. Possible statuses are Running, Complete, Aborted, or Stopped. 

Editing RunDef files
--------------------
The RunDef file is separated into the following sections:
* Run Parameters
* Notifications
* Pick Lists
* Plate Definitions
* Run Actions
* Setup Confirmation
* Plate Storage Definition

RunSet Parameters
-----------------
Name 								- name of the runset e.g. DNA Quantification
RunSetOwner 						- owner of the runset e.g. 'ACCESS'
RunSetComments 						- any comments (1000 chars max)

Run Parameters
--------------
RunID 								- set at runtime, when a corresponding log folder is created in C:\Labcyte\Tempo\Logs\Run_ID
RunName								- name that will appear in the scheduler window for that run
ReferenceID 						- LIMS (or other external) id for this run i.e. the id for the grouping of plates in this run
Comments 							- any comments (1000 chars max)
Owner 								- owner of the run e.g. 'ACCESS'

InitializeDevices 					- Re-initialize devices
InventoryPlates 					- Re-inventory plate storage locations
AutoAssignBarcodePlateLocations 	- Auto-assign barcoded plate locations
InheritPlateStorageDefinitions 		- Inherit plate storage definitions
AllowWarningPlates 					- Allow run to start with warning plates
AllowErrorPlates 					- Allow run to start with error plates
AllowMissingPlates 					- Allow run to start with missing plates

<RunSet Name="DNA Quantification">
	<RunSetOwner />
	<RunSetComments />
	<Run RunID="0" RunName="Step 1: Pooling DNA Sources to Standards" RunDelayInSeconds="0" ScheduleRunTime="1/1/0001 12:00:00 AM">
		<Definition>
			<ReferenceID>SSS_RUNSET_REFERENCE_ID_SSS</ReferenceID>
			<Comments>This file is generated automatically by the Access System python script</Comments>
			<Owner>ACCESS</Owner>
		</Definition>
		<Parameters>
			<Parameter name="InitializeDevices">true</Parameter>
			<Parameter name="InventoryPlates">true</Parameter>
			<Parameter name="AutoAssignBarcodedPlateLocations">false</Parameter>
			<Parameter name="InheritPlateStorageDefinitions">false</Parameter>
			<Parameter name="AllowWarningPlates">false</Parameter>
			<Parameter name="AllowErrorPlates">false</Parameter>
			<Parameter name="AllowMissingPlates">false</Parameter>
		</Parameters>

Notifications
-------------
RunStarted 					- Run Started
RunRequiresUserAttention 	- Run Requires User Assistance
RunExecutionError 			- Run Execution Error
RunFinished 				- Run Finished
RunCompletedSuccessfully 	- Run Completed Successfully
RunCompletedWithWarnings 	- Run Completed with Warnings
RunStopped 					- Run Stopped
RunAborted 					- Run Aborted
RunReports 					- Send links to reports via email
RunValidationReport 		- Run Validation Report

		<Notifications>
			<Users />
			<NotifyConditions>
				<NotifyCondition name="RunStarted">true</NotifyCondition>
				<NotifyCondition name="RunRequiresUserAttention">true</NotifyCondition>
				<NotifyCondition name="RunExecutionError">true</NotifyCondition>
				<NotifyCondition name="RunFinished">true</NotifyCondition>
				<NotifyCondition name="RunCompletedSuccessfully">false</NotifyCondition>
				<NotifyCondition name="RunCompletedWithWarnings">false</NotifyCondition>
				<NotifyCondition name="RunCompletedWithErrors">false</NotifyCondition>
				<NotifyCondition name="RunStopped">true</NotifyCondition>
				<NotifyCondition name="RunAborted">false</NotifyCondition>
				<NotifyCondition name="RunReports">true</NotifyCondition>
				<NotifyCondition name="RunValidationReport">false</NotifyCondition>
			</NotifyConditions>
		</Notifications>

Picklists
---------
Locate the 'CompoundPickList' element within the 'EchoApplicationFileNames' tag and change the filename.
N.B. Enclosed in double quotes.
N.B. If the pick list file is changed, the Plate Map must be modified to match the new pick list. See plate definitions in next section.
N.B. If you leave off the 'Checksum' field it doesn't check it.

		<PODProtocol Name="Pooling DNA Sources to Standards" Version="1.0" Root="SSS_EXPT_ROOT_DIR_SSS">
			<EchoProtocol>
				<DataSetName>EchoProtocol</DataSetName>
				<UsingEchoApplication>True</UsingEchoApplication>
				<SelectedEcho>Echo</SelectedEcho>
				<Path>SSS_CHERRY_PICK_384DEST_ECP_FP_SSS</Path>
				<IgnoreChecksum>True</IgnoreChecksum>
				<EchoApplicationFileNames>
					<File FileType="DefaultProtocol" FileName="C:\Program Files\Labcyte\Echo Cherry Pick\EchoCherryPick.default" />
					<File FileType="CompoundPickList" FileName="set this to the picklist filename" />
				</EchoApplicationFileNames>

Plate Definitions
-----------------
If the pick list and/or the number of plates changes, the application API method must be used to get a list of the new plates. For more information, see the API method string PreProcessProtocol(string instrumentNameOrIPAddr) and section 4.5 for the annotated example in the Echo Application Integration Manual.
• Change the pick list file.
• Update the pick list filename as shown in the Pick Lists section.
• Generate the new plate map data using the API method listed above.
• Copy the new plate map data into the PlateMap parameter of the RunDef file.

				<PlateMap>
					<Plate EchoPlateID="1" PlateName="DNA_source_1" PlateType="384PP" Barcode="" LidType="" PlateCategory="Source" LocationURL="deck://Deck/1/5/" FinalLocation="deck://Deck/1/5/" PlateAccess="Sequential" PreRunActionSetName="Source" RunActionSetName="" PostRunActionSetName="" StorageDeviceSetName="" EchoTemplate="DNA_source_1" />
					<Plate EchoPlateID="3" PlateName="DNAQ_STD" PlateType="384PP_Dest" Barcode="" LidType="" PlateCategory="Destination" LocationURL="deck://Deck/1/1/" FinalLocation="deck://Deck/1/1/" PlateAccess="Sequential" PreRunActionSetName="DNAQ_STD" RunActionSetName="" PostRunActionSetName="DNAQ_STD" StorageDeviceSetName="" EchoTemplate="DNAQ_STD" />
					<Plate EchoPlateID="2" PlateName="DNA_source_2" PlateType="384PP" Barcode="" LidType="" PlateCategory="Source" LocationURL="deck://Deck/1/6/" FinalLocation="deck://Deck/1/6/" PlateAccess="Sequential" PreRunActionSetName="Source" RunActionSetName="" PostRunActionSetName="" StorageDeviceSetName="" EchoTemplate="DNA_source_2" />
				</PlateMap>

Run Actions
-----------
There are sections for the following:

* PreRunActions 				- 
* RunActions 					- 
* PostRunActions 				- 
* PreProtocolRunActions 		- 
* PostProtocolRunActions 		- 
* ExternalValidatorRunActions 	- 

				<RunActions>
					<PreRunActions>
						<ActionSet Name="DNAQ_STD">
							<Read_Barcode>
								<BarcodeMismatchString>Prompt user for action</BarcodeMismatchString>
								<BarcodeMissingString>Clear barcode and continue</BarcodeMissingString>
								<ErrorPlateDispositionString>Original Location</ErrorPlateDispositionString>
								<Schedule>Immediately</Schedule>
								<UserPriority>Normal</UserPriority>
								<DeviceName />
							</Read_Barcode>
						</ActionSet>
						<ActionSet Name="Source" />
					</PreRunActions>
					
					<RunActions />

					<PostRunActions>
						<ActionSet Name="DNAQ_STD">
							<Spin_Plate>
								<Acceleration>50</Acceleration>
								<Deceleration>50</Deceleration>
								<Velocity>3000</Velocity>
								<MaxVelocity>3000</MaxVelocity>
								<SpinTime>30</SpinTime>
								<Schedule>Immediately</Schedule>
								<UserPriority>Normal</UserPriority>
								<DeviceName />
							</Spin_Plate>
						</ActionSet>
						<ActionSet Name="Source" />
					</PostRunActions>

					<PreProtocolRunActions>
						<ActionSet Name="actions" />
					</PreProtocolRunActions>
					
					<PostProtocolRunActions>
						<ActionSet Name="actions" />
					</PostProtocolRunActions>
					
					<ExternalValidatorRunActions>
						<ActionSet Name="actions" />
					</ExternalValidatorRunActions>
				</RunActions>


Setup Confirmation
------------------
A user may choose to manually edit values for the fluid map, plate inserts, sealer inserts, or counter balance plates. Typically, these values will not need to be changed in the XML because the mappings will stay the same regardless of changes to the pick lists or other run action value changes. If the plate types are modified, then the corresponding mapping values may also need to be modified.

				<FluidMap>
					<Fluid DeviceName="CombiNLDevice" DeviceFluid="Water" ProtocolFluid="n/a" />
				</FluidMap>

				<PlateInserts>
					<Insert PlateType="384PP_AQ_SP_High" InsertName="SOURCE PLATE W/2.10 MM INSET" />
				</PlateInserts>
				
				<SealerInserts />
				
				<CounterBalances>
					<PlateBalance PlateType="Corning_384PS_Black" CounterBalance="Corning 384 PS balance 50ul" />
					<UserAssignedCounterBalance />
				</CounterBalances>
				

Plate Storage Definition
------------------------
A user may choose to manually edit values for the plate storage data. The corresponding sections are shown in the RunDef file.

<StorageSets />

<PlateStorage ClearFinalStorageLocations="True">
	<PlateStorageData>Plates Version
PlateID,EchoPlateID,PlateName,PlateBarcode,PlateType,PlateCategory,LidType,Sealed,PlateStatus,OriginalLocation,FinalLocation,CurrentLocation,RunLocation,CurrentRotation,PlateRename,PlateState,LidLocation,
1665,1,DNA_source_1,,384PP,Source,,False,OK,deck://Deck/1/5/,deck://Deck/1/5/,deck://Deck/1/5/,,0,,Unknown,,
	</PlateStorageData>
</PlateStorage>

